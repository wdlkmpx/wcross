#!/bin/sh
# https://www.7-zip.org/download.html

# https://aur.archlinux.org/cgit/aur.git/tree/?h=7-zip-full
# https://git.alpinelinux.org/aports/tree/community/7zip

HWACCEL=
# only use uasm with glibc
# becuase musl fails: i686-linux-musl/bin/ld: read-only segment has dynamic relocations
if [ "$GLIBC_TOOLCHAIN" ] ; then
    command -v uasm && HWACCEL=1
fi

pkgname=7zip
pkgver=2201
pkgrel=0
pkgdesc="original 7zip"
#[ -n "$HWACCEL" ] && pkgdeps='uasm'
PKGDIR_FILE=usr/bin/7zip
DIST_BINARY=7zip
PROJECT_TYPE='C++'

SRC_URL=https://www.7-zip.org/a/7z${pkgver}-src.tar.xz
SRC_DIR=7zip-${pkgver}
SRC_DIR_NEED_TO_CREATE=1
DL_SUBDIR=''

# ====================================================

build()
{
	# error: unknown type name ‘cpu_set_t’ (must add -D_GNU_SOURCE)
	#      https://github.com/gwsystems/composite/issues/295
	sed -i \
		-e "s%CFLAGS = %CFLAGS += %" \
		-e "s%CXXFLAGS = %CXXFLAGS += %" \
		-e "s%LDFLAGS = %LDFLAGS += %" \
		-e 's|MY_ASM = asmc|MY_ASM = uasm|g' \
		CPP/7zip/7zip_gcc.mak
	sed -i -e "s%-Werror -Wextra%%" CPP/7zip/7zip_gcc.mak
#	sed -i 's|LFLAGS_ALL = -s $(MY_ARCH_2) $(LDFLAGS) $(LD_arch) $(OBJS) $(MY_LIBS) $(LIB2)|LFLAGS_ALL = -s $(MY_ARCH_2) $(LDFLAGS) -Wl,-z,noexecstack $(LD_arch) $(OBJS) $(MY_LIBS) $(LIB2)|g' CPP/7zip/7zip_gcc.mak

	#https://github.com/nhorman/rng-tools/commit/d1840e54a15fc454936cada10cce7fd91d06232b
	#https://github.com/nhorman/rng-tools/commit/5caa086dc14cecf68d1a5c31e87ba1efb2c00893
	# 1/ The function pthread_yield() does not exist in musl libc,
	#    and can be replaced with sched_yield() after including sched.h.
	# 2/ The function pthread_attr_setaffinity_np() does not exist in musl libc,
	#    and can be replaced with pthread_setaffinity_np() after pthread_create().
#    patch -p1 < ${PKG_SCRIPT_DIR}/7zip-threads.patch

	wmakefile='cmpl_gcc.mak'
	w7zdir='g'

	if [ -n "$HWACCEL" ] ; then
		case ${CPU_ARCH} in
			i?86)    wmakefile='cmpl_gcc_x86.mak'  ; w7zdir='g_x86' ;;
			x86_64)  wmakefile='cmpl_gcc_x64.mak'  ; w7zdir='g_x64' ;;
			aarch64) wmakefile='cmpl_gcc_arm64.mak'; w7zdir='g_arm64' ;;
			arm64)   wmakefile='cmpl_gcc_arm64.mak'; w7zdir='g_arm64' ;;
		esac
		if [ "$w7zdir" != "g" ] ; then
			echo "*** Hardware acceleration is enabled"
		fi
	fi

	_make \
		-C CPP/7zip/Bundles/Alone2 \
		-f ../../${wmakefile} # CPP/7zip/cmpl_gcc.mak

	if [ -f CPP/7zip/Bundles/Alone2/b/${w7zdir}/7zz ] ; then
		cp -fv CPP/7zip/Bundles/Alone2/b/${w7zdir}/7zz 7zip
	fi
}

package()
{
	install_exe 7zip ${pkgdir}/usr/bin
	ln -sv 7zip ${pkgdir}/usr/bin/7za
	ln -sv 7zip ${pkgdir}/usr/bin/7z
}

