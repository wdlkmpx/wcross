--- a/CMakeLists.txt	2022-11-01 08:36:33.000000000 -0500
+++ b/CMakeLists.txt	2023-03-23 14:41:42.841546758 -0500
@@ -1,6 +1,13 @@
 # Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
 # file Copyright.txt or https://cmake.org/licensing for details.
 
+## STATIC for cmake 3.23.5, assuming cmake 3.6+
+#
+# problems with a ton of missing symbols
+# only libcurl and libarchive are currently  known to require more libs to link
+# we need pkg-config since cmake doesn't provide that info
+#
+
 cmake_minimum_required(VERSION 3.1...3.21 FATAL_ERROR)
 set(CMAKE_USER_MAKE_RULES_OVERRIDE_C ${CMAKE_CURRENT_SOURCE_DIR}/Source/Modules/OverrideC.cmake)
 set(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX ${CMAKE_CURRENT_SOURCE_DIR}/Source/Modules/OverrideCXX.cmake)
@@ -10,6 +17,15 @@
 endif()
 
 project(CMake)
+
+##--STATIC
+set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
+# Disables trying to build any shared library
+set(BUILD_SHARED_LIBS OFF)
+##--
+
+include(FindPkgConfig)
+
 unset(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX)
 unset(CMAKE_USER_MAKE_RULES_OVERRIDE_C)
 
@@ -480,13 +496,14 @@
   #---------------------------------------------------------------------
   # Build Curl library for CTest.
   if(CMAKE_USE_SYSTEM_CURL)
-    find_package(CURL)
+    #find_package(CURL)
+    pkg_check_modules(CURL libcurl)
     if(NOT CURL_FOUND)
       message(FATAL_ERROR
         "CMAKE_USE_SYSTEM_CURL is ON but a curl is not found!")
     endif()
     set(CMAKE_CURL_INCLUDES ${CURL_INCLUDE_DIRS})
-    set(CMAKE_CURL_LIBRARIES ${CURL_LIBRARIES})
+    set(CMAKE_CURL_LIBRARIES ${CURL_STATIC_LIBRARIES})
   else()
     set(CURL_SPECIAL_ZLIB_H ${CMAKE_ZLIB_HEADER})
     set(CURL_SPECIAL_LIBZ_INCLUDES ${CMAKE_ZLIB_INCLUDES})
@@ -594,12 +611,13 @@
   #---------------------------------------------------------------------
   # Build or use system libarchive for CMake and CTest.
   if(CMAKE_USE_SYSTEM_LIBARCHIVE)
-    find_package(LibArchive 3.3.3)
+    #find_package(LibArchive 3.3.3)
+    pkg_check_modules(LibArchive libarchive>=3.3.3)
     if(NOT LibArchive_FOUND)
       message(FATAL_ERROR "CMAKE_USE_SYSTEM_LIBARCHIVE is ON but LibArchive is not found!")
     endif()
     set(CMAKE_TAR_INCLUDES ${LibArchive_INCLUDE_DIRS})
-    set(CMAKE_TAR_LIBRARIES ${LibArchive_LIBRARIES})
+    set(CMAKE_TAR_LIBRARIES ${LibArchive_STATIC_LIBRARIES})
   else()
     set(EXPAT_INCLUDE_DIR ${CMAKE_EXPAT_INCLUDES})
     set(EXPAT_LIBRARY ${CMAKE_EXPAT_LIBRARIES})
